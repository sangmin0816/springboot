buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id "java"
    id "war"
    id "org.springframework.boot" version "2.7.17"
    id "io.spring.dependency-management" version "1.0.15.RELEASE"
}

group = "com.example"
version = "0.0.1-SNAPSHOT"

java {
    sourceCompatibility = "17"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
    implementation "org.springframework.boot:spring-boot-starter-web"

    // querydsl 라이브러리
    implementation "com.querydsl:querydsl-jpa"
    implementation "com.querydsl:querydsl-apt"
    implementation "com.querydsl:querydsl-core"
    implementation "com.querydsl:querydsl-sql"

    // modelMapper
    implementation "org.modelmapper:modelmapper:3.1.0"

    // 아래는 언제, 왜 추가하셨을까?
    implementation "nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "io.springfox:springfox-boot-starter:3.0.0"
    implementation "io.springfox:springfox-swagger-ui:3.0.0"
    implementation "net.coobird:thumbnailator:0.4.16"

    compileOnly "org.projectlombok:lombok"
    developmentOnly "org.springframework.boot:spring-boot-devtools"
    runtimeOnly "org.mariadb.jdbc:mariadb-java-client"

    // 기존 롬복 이외도, javax 와 querydsl 어노테이션 추가
    annotationProcessor(
            "org.projectlombok:lombok",
            "javax.persistence:javax.persistence-api",
            "javax.annotation:javax.annotation-api",
            "com.querydsl:querydsl-apt");

    providedRuntime "org.springframework.boot:spring-boot-starter-tomcat"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    // test junit 시에 lombok 추가
    testCompileOnly "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"
}

tasks.named("bootBuildImage") {
    builder = "paketobuildpacks/builder-jammy-base:latest"
}

tasks.named("test") {
    useJUnitPlatform()
}

sourceSets {
    main.java.srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
}